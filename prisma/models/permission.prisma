model Permission {
  id          Int                  @id @default(autoincrement())
  name        String // view, create, update, delete
  description String?
  createdBy   Int?
  createdAt   DateTime             @default(now())
  permissions UserPagePermission[]
}

model Page {
  id          Int                  @id @default(autoincrement())
  name        String
  path        String
  createdBy   Int?
  createdAt   DateTime             @default(now())
  permissions UserPagePermission[]
}

model UserPagePermission {
  id           Int      @id @default(autoincrement())
  roleId       Int
  pageId       Int
  permissionId Int
  createdBy    Int?
  createdAt    DateTime @default(now())

  roles      Role       @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  page       Page       @relation(fields: [pageId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  permission Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([roleId, pageId, permissionId]) // composite key
}
